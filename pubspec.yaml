name: ai_japa_mahamantra
description: "AI-powered Japa Mahamantra mobile application for spiritual practice"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 2.2.2

environment:
  sdk: ^3.9.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # UI и анимации
  cupertino_icons: ^1.0.8
  
  # Управление состоянием
  provider: ^6.1.1
  
  # HTTP клиент для AI
  http: ^1.1.0
  dio: ^5.4.0
  
  # Локальный AI на устройстве через llama.cpp
  flutter_llama: ^0.1.1
  
  # Локальные уведомления
  flutter_local_notifications: ^19.4.1
  
  # Фоновые задачи
  workmanager: ^0.9.0+3
  
  # Локальное хранилище
  shared_preferences: ^2.2.2
  
  # Шифрование для логов
  encrypt: ^5.0.3
  crypto: ^3.0.3
  
  # Пути к файлам
  path_provider: ^2.1.1
  
  # Информация о пакете (версия приложения)
  package_info_plus: ^9.0.0
  
  # Открытие URL
  url_launcher: ^6.3.0
  
  # Аудио
  audioplayers: ^6.5.1
  
  # Вибрация
  vibration: ^3.1.3
  
  # Время и даты
  intl: ^0.20.2
  
  # Настройки
  flutter_settings_ui: ^3.0.1
  
  # Аналитика
  firebase_analytics: ^12.0.3
  
  # Кэширование
  cached_network_image: ^3.3.0
  
  # Локальная база данных
  sqflite: ^2.3.0
  
  # Пути
  path: ^1.8.3
  
  # JSON
  json_annotation: ^4.8.1
  
  # Видео плеер
  video_player: ^2.8.2
  
  # Connectivity
  connectivity_plus: ^7.0.0
  
  # Battery monitoring для воспевания на зарядке
  battery_plus: ^7.0.0
  
  # Wake lock для постоянного воспевания на зарядке
  wakelock_plus: ^1.2.8
  
  # Magento интеграция через HTTP клиент
  # Используем dio для работы с REST API
  
  
  # Magento e-commerce integration
  # flutter_magento: ^4.3.1
  
  # FreeDome integration
  flutter_freedome: ^2.1.1  
  
  
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^6.0.0
  lints: ^6.0.0

  # Генерация кода
  build_runner: ^2.4.7
  json_serializable: ^6.7.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/audio/
    - assets/animations/
    - assets/models/  # AI модели в формате GGUF

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Sanskrit
  #     fonts:
  #       - asset: assets/fonts/Sanskrit-Regular.ttf
  #       - asset: assets/fonts/Sanskrit-Bold.ttf
  #         weight: 700
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
