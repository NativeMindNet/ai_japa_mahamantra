import 'package:flutter/material.dart';
import 'dart:async';
import '../screens/easter_egg_logs_screen.dart';

/// –î–µ—Ç–µ–∫—Ç–æ—Ä Easter Egg –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –ª–æ–≥–æ–≤
/// –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è —Ç—Ä–æ–π–Ω—ã–º —Ç–∞–ø–æ–º –Ω–∞ 108-–π –±—É—Å–∏–Ω–µ
class EasterEggDetector extends StatefulWidget {
  final Widget child;
  final bool isSpecialBead; // true –µ—Å–ª–∏ —ç—Ç–æ 108-—è –±—É—Å–∏–Ω–∞
  
  const EasterEggDetector({
    Key? key,
    required this.child,
    this.isSpecialBead = false,
  }) : super(key: key);

  @override
  State<EasterEggDetector> createState() => _EasterEggDetectorState();
}

class _EasterEggDetectorState extends State<EasterEggDetector> {
  int _tapCount = 0;
  Timer? _resetTimer;
  
  static const int _requiredTaps = 3;
  static const Duration _tapTimeout = Duration(seconds: 2);

  void _handleTap() {
    if (!widget.isSpecialBead) return;
    
    setState(() {
      _tapCount++;
    });

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç
    _resetTimer?.cancel();
    _resetTimer = Timer(_tapTimeout, () {
      if (mounted) {
        setState(() {
          _tapCount = 0;
        });
      }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –ª–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–ø–æ–≤
    if (_tapCount >= _requiredTaps) {
      _activateEasterEgg();
    }
  }

  void _activateEasterEgg() {
    _tapCount = 0;
    _resetTimer?.cancel();

    // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    _triggerHapticFeedback();

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω
    Navigator.of(context).push(
      PageRouteBuilder(
        pageBuilder: (context, animation, secondaryAnimation) =>
            const EasterEggLogsScreen(),
        transitionsBuilder: (context, animation, secondaryAnimation, child) {
          const begin = Offset(0.0, 1.0);
          const end = Offset.zero;
          const curve = Curves.easeInOut;

          var tween = Tween(begin: begin, end: end)
              .chain(CurveTween(curve: curve));

          return SlideTransition(
            position: animation.drive(tween),
            child: FadeTransition(
              opacity: animation,
              child: child,
            ),
          );
        },
      ),
    );
  }

  void _triggerHapticFeedback() {
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–∏—é –≤–∏–±—Ä–∞—Ü–∏–π –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    Future.delayed(Duration.zero, () async {
      for (int i = 0; i < 3; i++) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Vibration.vibrate –µ—Å–ª–∏ –ø–∞–∫–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω
        await Future.delayed(const Duration(milliseconds: 100));
      }
    });
  }

  @override
  void dispose() {
    _resetTimer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: _handleTap,
      child: Stack(
        children: [
          widget.child,
          
          // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –¥–µ–±–∞–≥–∞)
          if (widget.isSpecialBead && _tapCount > 0)
            Positioned(
              top: 0,
              right: 0,
              child: Container(
                padding: const EdgeInsets.all(4),
                decoration: BoxDecoration(
                  color: Colors.amber.withOpacity(0.8),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Text(
                  '$_tapCount/$_requiredTaps',
                  style: const TextStyle(
                    color: Colors.black,
                    fontSize: 10,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ),
        ],
      ),
    );
  }
}

/// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–µ—Ç–µ–∫—Ç–æ—Ä —á–µ—Ä–µ–∑ —É–¥–µ—Ä–∂–∞–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –º–∞–Ω–¥–∞–ª—ã
class MandalaCenterEasterEggDetector extends StatefulWidget {
  final Widget child;
  
  const MandalaCenterEasterEggDetector({
    Key? key,
    required this.child,
  }) : super(key: key);

  @override
  State<MandalaCenterEasterEggDetector> createState() =>
      _MandalaCenterEasterEggDetectorState();
}

class _MandalaCenterEasterEggDetectorState
    extends State<MandalaCenterEasterEggDetector> {
  int _swipeCount = 0;
  bool _isHolding = false;
  Timer? _holdTimer;
  Offset? _startPosition;
  
  static const int _requiredSwipes = 108;
  static const Duration _holdDuration = Duration(seconds: 2);

  void _onLongPressStart(LongPressStartDetails details) {
    setState(() {
      _isHolding = true;
      _swipeCount = 0;
      _startPosition = details.localPosition;
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä —É–¥–µ—Ä–∂–∞–Ω–∏—è
    _holdTimer = Timer(_holdDuration, () {
      // –ü–æ—Å–ª–µ 2 —Å–µ–∫—É–Ω–¥ —É–¥–µ—Ä–∂–∞–Ω–∏—è –Ω–∞—á–∏–Ω–∞–µ–º —Å—á–∏—Ç–∞—Ç—å —Å–≤–∞–π–ø—ã
      debugPrint('Easter Egg: –£–¥–µ—Ä–∂–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ, –æ–∂–∏–¥–∞–µ–º 108 —Å–≤–∞–π–ø–æ–≤');
    });
  }

  void _onLongPressMoveUpdate(LongPressMoveUpdateDetails details) {
    if (!_isHolding || _startPosition == null) return;

    final currentPosition = details.localPosition;
    final dx = currentPosition.dx - _startPosition!.dx;
    final dy = currentPosition.dy - _startPosition!.dy;
    final distance = (dx * dx + dy * dy);

    // –ï—Å–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ –∫—Ä—É–≥—É (–ø—Ä–∏–º–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
    if (distance > 100) {
      setState(() {
        _swipeCount++;
        _startPosition = currentPosition;
      });

      if (_swipeCount >= _requiredSwipes) {
        _activateEasterEgg();
      }
    }
  }

  void _onLongPressEnd(LongPressEndDetails details) {
    setState(() {
      _isHolding = false;
      _swipeCount = 0;
      _startPosition = null;
    });
    _holdTimer?.cancel();
  }

  void _activateEasterEgg() {
    _isHolding = false;
    _swipeCount = 0;
    _holdTimer?.cancel();

    Navigator.of(context).push(
      PageRouteBuilder(
        pageBuilder: (context, animation, secondaryAnimation) =>
            const EasterEggLogsScreen(),
        transitionsBuilder: (context, animation, secondaryAnimation, child) {
          return FadeTransition(
            opacity: animation,
            child: ScaleTransition(
              scale: Tween<double>(begin: 0.8, end: 1.0).animate(
                CurvedAnimation(parent: animation, curve: Curves.easeOut),
              ),
              child: child,
            ),
          );
        },
      ),
    );
  }

  @override
  void dispose() {
    _holdTimer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onLongPressStart: _onLongPressStart,
      onLongPressMoveUpdate: _onLongPressMoveUpdate,
      onLongPressEnd: _onLongPressEnd,
      child: Stack(
        children: [
          widget.child,
          
          // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–≤–∞–π–ø–æ–≤
          if (_isHolding && _swipeCount > 0)
            Positioned(
              top: 20,
              left: 0,
              right: 0,
              child: Center(
                child: Container(
                  padding: const EdgeInsets.symmetric(
                    horizontal: 16,
                    vertical: 8,
                  ),
                  decoration: BoxDecoration(
                    color: Colors.amber.withOpacity(0.9),
                    borderRadius: BorderRadius.circular(20),
                  ),
                  child: Text(
                    'üïâÔ∏è $_swipeCount / $_requiredSwipes',
                    style: const TextStyle(
                      color: Colors.black,
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                ),
              ),
            ),
        ],
      ),
    );
  }
}

/// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Easter Egg
extension EasterEggExtension on Widget {
  /// –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –≤ –¥–µ—Ç–µ–∫—Ç–æ—Ä Easter Egg –¥–ª—è 108-–π –±—É—Å–∏–Ω—ã
  Widget withBeadEasterEgg({bool isSpecialBead = false}) {
    return EasterEggDetector(
      isSpecialBead: isSpecialBead,
      child: this,
    );
  }

  /// –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –≤ –¥–µ—Ç–µ–∫—Ç–æ—Ä –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –º–∞–Ω–¥–∞–ª—ã
  Widget withMandalaEasterEgg() {
    return MandalaCenterEasterEggDetector(
      child: this,
    );
  }
}

